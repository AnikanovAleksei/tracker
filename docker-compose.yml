services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6.1.0
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: .
    command: >
      bash -c "celery -A ${config} worker --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: >
      bash -c "celery -A ${config} beat --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:1.21
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/static
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: