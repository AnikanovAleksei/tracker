services:
  web:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "sleep 5 && 
      python manage.py migrate && 
      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - deploy/.env
    environment:
      DEBUG: False
    volumes:
      - static_volume:/app/static_collected
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER} -d ${NAME}" ]
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2.4-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 5

  celery:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "celery -A config worker --loglevel=info"
    env_file:
      - deploy/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "celery -A config beat --loglevel=info"
    env_file:
      - deploy/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/static
    depends_on:
      web:
        condition: service_started

volumes:
  postgres_data:
  static_volume: