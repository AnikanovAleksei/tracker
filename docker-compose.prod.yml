services:
  web:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "python manage.py collectstatic -c --no-input && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - deploy/.env
    environment:
      DEBUG: False
    volumes:
      - static_volume:/app/static_collected
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER} -d ${DB_NAME}" ]
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.1.0
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 5

  celery:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "celery -A config worker --loglevel=info"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_beat:
    image: ${IMAGE}/myapp:${TAG}
    command: >
      bash -c "celery -A config beat --loglevel=info"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:1.21
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static_collected
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: